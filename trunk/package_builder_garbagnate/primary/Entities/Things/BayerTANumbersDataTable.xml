<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Entities build="b222" majorVersion="8" minorVersion="5" modelPersistenceProviderPackage="PostgresPersistenceProviderPackage" revision="4" schemaVersion="1053" universal="">
    <Things>
        <Thing description="Bayer TA-Numbers Matrix (Data Table) - Extra Info" documentationContent="" effectiveThingPackage="DataTableThing" enabled="true" homeMashup="DataTableEditor" identifier="" lastModifiedDate="2020-06-18T05:25:41.089Z" name="BayerTANumbersDataTable" projectName="BayerIoT" published="false" tags="" thingTemplate="DataTable" valueStream="">
            <avatar/>
            <DesignTimePermissions>
                <Create/>
                <Read/>
                <Update/>
                <Delete/>
                <Metadata/>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions resourceName="AddOrUpdateRecord">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="*">
                    <PropertyRead>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </PropertyRead>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="GetDataTableEntryByKey">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="GetEntriesForLine">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="DeleteDataTableEntryByKey">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal isPermitted="true" name="Bayer:PerformanceDashboard" type="OrganizationalUnit"/>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions>
                <ConfigurationTableDefinition category="" dataShapeName="BayerTANumbersInfoDataShape" description="" isHidden="false" isMultiRow="false" name="ColumnMapping" ordinal="0" source="IMPORT"/>
            </ConfigurationTableDefinitions>
            <ConfigurationTables>
                <ConfigurationTable description="" isMultiRow="false" name="ColumnMapping" ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition aspect.isPrimaryKey="false" baseType="STRING" description="Format Type" name="formatType" ordinal="4"/>
                            <FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="TA-Number" name="taNumber" ordinal="3"/>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <formatType>
                            <![CDATA[
                            Format
                            ]]>
                            </formatType>
                            <taNumber>
                            <![CDATA[
                            TA
                            ]]>
                            </taNumber>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable description="Data Thing Configuration" isMultiRow="false" name="DataThingSettings" ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition baseType="STRING" description="Persistence Provider Name" name="persistenceProvider" ordinal="0"/>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <persistenceProvider>
                            <![CDATA[
                            ThingworxPersistenceProvider
                            ]]>
                            </persistenceProvider>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable description="Data Shape Configuration" isMultiRow="false" name="Settings" ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition aspect.friendlyName="Data Shape" baseType="DATASHAPENAME" description="Data shape" name="dataShape" ordinal="0"/>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <accumulatedDataShape>
                                <json>
                                <![CDATA[
                                {"fieldDefinitions":{"taNumber":{"name":"taNumber","aspects":{"isPrimaryKey":true},"description":"TA-Number","baseType":"STRING","ordinal":2},"productionLine":{"name":"productionLine","aspects":{"isPrimaryKey":true,"thingTemplate":"BayerProductionLine"},"description":"Production Line Thing Name","baseType":"THINGNAME","ordinal":1},"formatType":{"name":"formatType","aspects":{"isPrimaryKey":false},"description":"Format Type","baseType":"STRING","ordinal":0}}}
                                ]]>
                                </json>
                            </accumulatedDataShape>
                            <dataShape>
                            <![CDATA[
                            BayerTANumbersRecordDataShape
                            ]]>
                            </dataShape>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable description="Index Settings" isMultiRow="true" name="Indexes" ordinal="1">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition aspect.friendlyName="Index Field Names" baseType="STRING" description="Index fields" name="fieldNames" ordinal="1"/>
                            <FieldDefinition aspect.friendlyName="Index Name" baseType="STRING" description="Index name" name="name" ordinal="0"/>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows/>
                </ConfigurationTable>
                <ConfigurationTable description="How to extract production line id from a given column (if needed)" isMultiRow="false" name="ProductionLineExtractColumn" ordinal="5">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="Name of the field to extract data from" name="fieldName" ordinal="1"/>
                            <FieldDefinition aspect.defaultValue="0" aspect.isPrimaryKey="true" aspect.minimumValue="0" baseType="INTEGER" description="Which splitted part to take as meaningful?" name="partIndex" ordinal="3"/>
                            <FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="Separator to use when splitting the field data" name="separator" ordinal="2"/>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <fieldName>
                            <![CDATA[
                            formatType
                            ]]>
                            </fieldName>
                            <partIndex>0</partIndex>
                            <separator>
                            <![CDATA[
                            -
                            ]]>
                            </separator>
                        </Row>
                    </Rows>
                </ConfigurationTable>
            </ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions/>
                <ServiceDefinitions>
                    <ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="AddOrUpdateRecord">
                        <ResultType aspect.dataShape="BayerTANumbersRecordDataShape" aspect.isDataTableEntry="true" baseType="INFOTABLE" description="" name="result" ordinal="0"/>
                        <ParameterDefinitions>
                            <FieldDefinition baseType="STRING" description="" name="formatType" ordinal="3"/>
                            <FieldDefinition aspect.thingTemplate="BayerProductionLine" baseType="THINGNAME" description="Production Line" name="productionLine" ordinal="1"/>
                            <FieldDefinition baseType="STRING" description="" name="taNumber" ordinal="2"/>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetEntriesForLine">
                        <ResultType aspect.dataShape="BayerTANumbersRecordDataShape" aspect.isDataTableEntry="true" baseType="INFOTABLE" description="" name="result" ordinal="0"/>
                        <ParameterDefinitions>
                            <FieldDefinition aspect.thingTemplate="BayerProductionLine" baseType="THINGNAME" description="Production Line" name="productionLine" ordinal="1"/>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions/>
                <ServiceMappings/>
                <ServiceImplementations>
                    <ServiceImplementation description="" handlerName="Script" name="AddOrUpdateRecord">
                        <ConfigurationTables>
                            <ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        try {
                                            // tags:TAGS
                                            var tags = new Array();
                                        
                                            // values:INFOTABLE(Datashape: BayerTANumbersRecordDataShape)
                                            var values = me.CreateValues();
                                            values.taNumber = taNumber; // STRING [Primary Key]
                                            values.productionLine = productionLine; // THINGNAME [Primary Key]
                                            values.formatType = formatType; // STRING
                                        
                                            // location:LOCATION
                                            var location = new Object();
                                            location.latitude = 0;
                                            location.longitude = 0;
                                            location.elevation = 0;
                                            location.units ="WGS84";
                                        
                                            // AddOrUpdateDataTableEntry(tags:TAGS, source:STRING("me.name"), values:INFOTABLE(BayerTANumbersDataTable), location:LOCATION):STRING
                                            var keyEntry = me.AddOrUpdateDataTableEntry({
                                                tags : tags,
                                                source : Resources["CurrentSessionInfo"].GetCurrentUser(),
                                                sourceType: "User",
                                                values : values,
                                                location : location
                                            });
                                            var result = me.GetDataTableEntry({
                                                values: values /* INFOTABLE */
                                            });
                                        } catch(ex) {
                                            logger.error(me.name+  ": Error: " + ex + " " + ex.stack);
                                            throw ex;
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation description="" handlerName="Script" name="GetEntriesForLine">
                        <ConfigurationTables>
                            <ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // 
                                        // GetEntriesForLine service
                                        // * productionLine - THINGNAME
                                        var query;
                                        if(!!productionLine) {
                                            query = {
                                                "filters": {
                                                    "type": "EQ",
                                                    "fieldName": "productionLine",
                                                    "value": productionLine
                                                }
                                            };
                                        } //? productionLine
                                        
                                        // result: INFOTABLE dataShape: ""
                                        var result =  me.QueryDataTableEntries({
                                            maxItems: 500 /* NUMBER */,
                                            query: query /* QUERY */,
                                            values: undefined /* INFOTABLE */,
                                            source: undefined /* STRING */,
                                            tags: undefined /* TAGS */
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions/>
            </ThingShape>
            <PropertyBindings/>
            <RemotePropertyBindings/>
            <RemoteServiceBindings/>
            <RemoteEventBindings/>
            <AlertConfigurations/>
            <ImplementedShapes>
                <ImplementedShape name="BayerChangeoverMatrixHelper" type="ThingShape"/>
            </ImplementedShapes>
            <ThingProperties/>
        </Thing>
    </Things>
</Entities>
