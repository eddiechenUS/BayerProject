<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Entities build="b222" majorVersion="8" minorVersion="5" modelPersistenceProviderPackage="PostgresPersistenceProviderPackage" revision="4" schemaVersion="1053" universal="">
    <Things>
        <Thing description="" documentationContent="" effectiveThingPackage="ConfiguredThing" enabled="true" homeMashup="" identifier="" lastModifiedDate="2020-08-05T17:40:01.974Z" name="BayerMaintenanceTicketsPage" projectName="BayerIoT" published="false" tags="" thingTemplate="GenericThing" valueStream="">
            <avatar/>
            <DesignTimePermissions>
                <Create/>
                <Read/>
                <Update/>
                <Delete/>
                <Metadata/>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions resourceName="GetMaintenanceTickets">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerOffice" type="Group"/>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="UpdateMaintenanceTicket">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerOffice" type="Group"/>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="GetMaintenanceTicketListUsers">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerOffice" type="Group"/>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="maintenanceTicketStatusFilterList">
                    <PropertyRead>
                        <Principal isPermitted="true" name="Role.BayerOffice" type="Group"/>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </PropertyRead>
                    <PropertyWrite/>
                    <ServiceInvoke/>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="maintenanceTicketStatusList">
                    <PropertyRead>
                        <Principal isPermitted="true" name="Role.BayerOffice" type="Group"/>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </PropertyRead>
                    <PropertyWrite/>
                    <ServiceInvoke/>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="*">
                    <PropertyRead>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </PropertyRead>
                    <PropertyWrite/>
                    <ServiceInvoke/>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="GetNamedProperties">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerOffice" type="Group"/>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="GetMaintenanceTicketsTimeThreshold">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerOffice" type="Group"/>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal isPermitted="true" name="Bayer:PerformanceDashboard" type="OrganizationalUnit"/>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions/>
            <ConfigurationTables/>
            <ThingShape>
                <PropertyDefinitions>
                    <PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.dataShape="GenericStringList" aspect.defaultValue="{&quot;rows&quot;:[{},{&quot;item&quot;:&quot;Open&quot;},{&quot;item&quot;:&quot;Pending&quot;},{&quot;item&quot;:&quot;Closed&quot;}],&quot;dataShape&quot;:{&quot;fieldDefinitions&quot;:{&quot;item&quot;:{&quot;name&quot;:&quot;item&quot;,&quot;aspects&quot;:{&quot;isPrimaryKey&quot;:true},&quot;description&quot;:&quot;Item&quot;,&quot;baseType&quot;:&quot;STRING&quot;,&quot;ordinal&quot;:0}}}}" aspect.isPersistent="true" baseType="INFOTABLE" category="" description="" isLocalOnly="false" name="maintenanceTicketStatusFilterList" ordinal="3"/>
                    <PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.dataShape="GenericStringList" aspect.defaultValue="{&quot;rows&quot;:[{&quot;item&quot;:&quot;Open&quot;},{&quot;item&quot;:&quot;Pending&quot;},{&quot;item&quot;:&quot;Closed&quot;}],&quot;dataShape&quot;:{&quot;fieldDefinitions&quot;:{&quot;item&quot;:{&quot;name&quot;:&quot;item&quot;,&quot;aspects&quot;:{&quot;isPrimaryKey&quot;:true},&quot;description&quot;:&quot;Item&quot;,&quot;baseType&quot;:&quot;STRING&quot;,&quot;ordinal&quot;:0}}}}" aspect.isPersistent="true" baseType="INFOTABLE" category="" description="" isLocalOnly="false" name="maintenanceTicketStatusList" ordinal="2"/>
                </PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetMaintenanceTicketListUsers">
                        <ResultType aspect.dataShape="GroupMember" baseType="INFOTABLE" description="" name="result" ordinal="0"/>
                        <ParameterDefinitions>
                            <FieldDefinition baseType="BOOLEAN" description="" name="withEmpty" ordinal="1"/>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetMaintenanceTickets">
                        <ResultType aspect.dataShape="BayerMaintenanceTicketsDataShape" baseType="INFOTABLE" description="" name="result" ordinal="0"/>
                        <ParameterDefinitions>
                            <FieldDefinition baseType="STRING" description="" name="assignedTo" ordinal="3"/>
                            <FieldDefinition aspect.thingTemplate="BayerProductionLine" baseType="THINGNAME" description="" name="productionLine" ordinal="3"/>
                            <FieldDefinition baseType="STRING" description="" name="status" ordinal="2"/>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetMaintenanceTicketsTimeThreshold">
                        <ResultType aspect.dataShape="BayerMaintenanceTicketsDataShape" baseType="INFOTABLE" description="" name="result" ordinal="0"/>
                        <ParameterDefinitions>
                            <FieldDefinition baseType="THINGNAME" description="" name="productionLine" ordinal="1"/>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="UpdateMaintenanceTicket">
                        <ResultType baseType="NOTHING" description="" name="result" ordinal="0"/>
                        <ParameterDefinitions>
                            <FieldDefinition baseType="STRING" description="" name="assignedTo" ordinal="2"/>
                            <FieldDefinition aspect.thingTemplate="BayerProductionLine" baseType="THINGNAME" description="" name="productionLine" ordinal="1"/>
                            <FieldDefinition baseType="STRING" description="" name="status" ordinal="3"/>
                            <FieldDefinition baseType="LONG" description="" name="ticketId" ordinal="4"/>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions/>
                <ServiceMappings/>
                <ServiceImplementations>
                    <ServiceImplementation description="" handlerName="Script" name="GetMaintenanceTicketListUsers">
                        <ConfigurationTables>
                            <ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var result = Groups["Role.BayerProductionLine.Operator"].GetGroupMembers();
                                        if (withEmpty)
                                        	result.AddRow({ name: " ", description: "", type: "User" });
                                        
                                        var sort = new Object();
                                        sort.name = "name";
                                        sort.ascending = true;
                                        result.Sort(sort);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation description="" handlerName="Script" name="GetMaintenanceTickets">
                        <ConfigurationTables>
                            <ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var dateValue = new Date();
                                        var timeThresholdDate = dateAddDays(dateValue, -14);
                                        if (assignedTo && assignedTo !== "undefined" || status && status !== "undefined") {
                                        	var result = Things[productionLine].GetMaintenanceTickets({
                                        		productionLine: productionLine /* THINGNAME */ ,
                                        		timeThreshold: timeThresholdDate /* DATETIME */ ,
                                        		assignedTo: assignedTo /* STRING */ ,
                                        		status: status /* STRING */
                                        	});
                                        } else {
                                        	var result = me.GetMaintenanceTicketsTimeThreshold({
                                        		productionLine: productionLine /* THINGNAME */
                                        	});
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation description="" handlerName="Script" name="GetMaintenanceTicketsTimeThreshold">
                        <ConfigurationTables>
                            <ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // dateValue:DATETIME
                                        var dateValue = new Date();
                                        
                                        // dateAddDays(dateValue:DATETIME, amount:NUMBER):STRING
                                        var timeThresholdDate = dateAddDays(dateValue, -14);
                                        
                                        // result: INFOTABLE dataShape: "BayerMaintenanceTicketsDataShape"
                                        var result = Things[productionLine].GetMaintenanceTicketsTimeThreshold({
                                        	timeThreshold: timeThresholdDate, /* DATETIME */
                                            productionLine: productionLine
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation description="" handlerName="Script" name="UpdateMaintenanceTicket">
                        <ConfigurationTables>
                            <ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        if(assignedTo === undefined)
                                        {
                                        	assignedTo = "";
                                        }
                                        
                                        Things[productionLine].UpdateMaintenanceTicket({
                                        	productionLine: productionLine /* THINGNAME */,
                                        	assignedTo: assignedTo /* STRING */,
                                        	ticketId: ticketId /* LONG */,
                                        	status: status /* STRING */
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions/>
            </ThingShape>
            <PropertyBindings/>
            <RemotePropertyBindings/>
            <RemoteServiceBindings/>
            <RemoteEventBindings/>
            <AlertConfigurations>
                <AlertDefinitions name="maintenanceTicketStatusFilterList"/>
                <AlertDefinitions name="maintenanceTicketStatusList"/>
            </AlertConfigurations>
            <ImplementedShapes/>
            <ThingProperties>
                <maintenanceTicketStatusFilterList>
                    <Value>
                        <infoTable>
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="Item" name="item" ordinal="1"/>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <item/>
                                </Row>
                                <Row>
                                    <item>
                                    <![CDATA[
                                    Open
                                    ]]>
                                    </item>
                                </Row>
                                <Row>
                                    <item>
                                    <![CDATA[
                                    Pending
                                    ]]>
                                    </item>
                                </Row>
                                <Row>
                                    <item>
                                    <![CDATA[
                                    Closed
                                    ]]>
                                    </item>
                                </Row>
                            </Rows>
                        </infoTable>
                    </Value>
                    <Timestamp>2019-12-11T07:27:57.674Z</Timestamp>
                    <Quality>GOOD</Quality>
                </maintenanceTicketStatusFilterList>
                <maintenanceTicketStatusList>
                    <Value>
                        <infoTable>
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="Item" name="item" ordinal="1"/>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <item>
                                    <![CDATA[
                                    Open
                                    ]]>
                                    </item>
                                </Row>
                                <Row>
                                    <item>
                                    <![CDATA[
                                    Pending
                                    ]]>
                                    </item>
                                </Row>
                                <Row>
                                    <item>
                                    <![CDATA[
                                    Closed
                                    ]]>
                                    </item>
                                </Row>
                            </Rows>
                        </infoTable>
                    </Value>
                    <Timestamp>2019-12-04T11:25:23.790Z</Timestamp>
                    <Quality>GOOD</Quality>
                </maintenanceTicketStatusList>
            </ThingProperties>
        </Thing>
    </Things>
</Entities>
