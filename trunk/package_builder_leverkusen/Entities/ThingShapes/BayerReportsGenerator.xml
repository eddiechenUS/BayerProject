<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Entities build="b2319" majorVersion="8" minorVersion="4" modelPersistenceProviderPackage="PostgresPersistenceProviderPackage" revision="4" schemaVersion="1041" universal="">
    <ThingShapes>
        <ThingShape className="" description="" documentationContent="" homeMashup="" lastModifiedDate="2019-10-11T11:57:53.003Z" name="BayerReportsGenerator" projectName="BayerIoT" tags="Applications:Bayer">
            <PropertyDefinitions>
                <PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="" isLocalOnly="false" name="reportsRecipient" ordinal="1"/>
                <PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="" isLocalOnly="false" name="reportsSender" ordinal="2"/>
            </PropertyDefinitions>
            <ServiceDefinitions>
                <ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GenerateAndSendReport">
                    <ResultType aspect.dataShape="FileSystemFileWithLinks" baseType="INFOTABLE" description="" name="result" ordinal="0"/>
                    <ParameterDefinitions/>
                </ServiceDefinition>
                <ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GenerateDailyReport">
                    <ResultType aspect.dataShape="FileSystemFileWithLinks" baseType="INFOTABLE" description="" name="result" ordinal="0"/>
                    <ParameterDefinitions/>
                </ServiceDefinition>
                <ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="SendReportByMail">
                    <ResultType baseType="NOTHING" description="" name="result" ordinal="0"/>
                    <ParameterDefinitions>
                        <FieldDefinition aspect.dataShape="FileSystemFileWithLinks" aspect.isRequired="true" baseType="INFOTABLE" description="" name="file" ordinal="2"/>
                        <FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="from" ordinal="3"/>
                        <FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="to" ordinal="1"/>
                    </ParameterDefinitions>
                </ServiceDefinition>
            </ServiceDefinitions>
            <EventDefinitions/>
            <ServiceMappings/>
            <ServiceImplementations>
                <ServiceImplementation description="" handlerName="Script" name="GenerateAndSendReport">
                    <ConfigurationTables>
                        <ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    // result: INFOTABLE dataShape: "FileSystemFileWithLinks"
                                    var report = me.GenerateDailyReport();
                                    
                                    var params = {
                                    	file: report /* INFOTABLE */,
                                    	from: me.reportsSender /* STRING */,
                                    	to: me.reportsRecipient /* STRING */
                                    };
                                    
                                    try {
                                    	me.SendReportByMail(params);
                                    }
                                    catch (ex) {
                                        logger.error(ex);
                                    }
                                    
                                    var result = report;
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation description="" handlerName="Script" name="GenerateDailyReport">
                    <ConfigurationTables>
                        <ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var fileName = dateFormat(new Date(), "yyyyMMddHHmmssSSS") + ".pdf";
                                    
                                    var params = {
                                    	FileRepository: "BayerReportsRepository" /* THINGNAME */,
                                    	Rotated90Deg: true /* BOOLEAN */,
                                    	AppKey: "3f6cb48c-3087-4998-a3be-d79d4132cac2" /* STRING */,
                                    	ServerAddress: "https://localhost:8443/Thingworx/Runtime/index-jq3.html#mashup=BayerReportsPrintPageMashup&lineName=" + me.name /* STRING */,
                                    	OutputFileName: fileName /* STRING */,
                                        Resolution: "1754*1240" /* STRING */
                                    	//Resolution: "1754*1240" /* STRING */
                                    };
                                    
                                    // result: STRING
                                    var pdfResult = Resources["PDFExport"].CreatePDF(params);
                                    logger.debug("PDFExport " + pdfResult);
                                    
                                    
                                    var params = {
                                    	path: "/" /* STRING */,
                                    	nameMask: fileName /* STRING */
                                    };
                                    
                                    // result: INFOTABLE dataShape: FileSystemFileWithLinks
                                    var result = Things["BayerReportsRepository"].GetFileListingWithLinks(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
                <ServiceImplementation description="" handlerName="Script" name="SendReportByMail">
                    <ConfigurationTables>
                        <ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <code>
                                    <![CDATA[
                                    var params = {
                                    	cc: undefined /* STRING */,
                                    	path: file.path /* STRING */,
                                    	bcc: undefined /* STRING */,
                                    	subject: "Daily report for " + me.name /* STRING */,
                                    	fileRepository: "BayerReportsRepository" /* THINGNAME */,
                                    	from: from /* STRING */,
                                    	attachmentName: file.name /* STRING */,
                                    	to: to /* STRING */,
                                    	mimeType: "application/pdf" /* STRING */,
                                    	body: "" /* HTML */
                                    };
                                    
                                    // no return
                                    Things["BayerMailServer2"].SendMessageWithAttachment(params);
                                    ]]>
                                    </code>
                                </Row>
                            </Rows>
                        </ConfigurationTable>
                    </ConfigurationTables>
                </ServiceImplementation>
            </ServiceImplementations>
            <Subscriptions>
                <Subscription description="" enabled="true" eventName="ScheduledEvent" name="OnReportScheduled" source="BayerReportsScheduler" sourceProperty="">
                    <ServiceImplementation description="" handlerName="Script" name="OnReportScheduled">
                        <ConfigurationTables>
                            <ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        me.GenerateAndSendReport();
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </Subscription>
            </Subscriptions>
            <avatar/>
            <DesignTimePermissions>
                <Create/>
                <Read/>
                <Update/>
                <Delete/>
                <Metadata/>
            </DesignTimePermissions>
            <RunTimePermissions/>
            <VisibilityPermissions>
                <Visibility>
                    <Principal isPermitted="true" name="Bayer:PerformanceDashboard" type="OrganizationalUnit"/>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions/>
            <ConfigurationTables/>
            <PropertyBindings/>
            <RemotePropertyBindings/>
            <RemoteServiceBindings/>
            <RemoteEventBindings/>
            <AlertConfigurations>
                <AlertDefinitions name="reportsRecipient"/>
                <AlertDefinitions name="reportsSender"/>
            </AlertConfigurations>
            <InstanceRunTimePermissions>
                <Permissions resourceName="SendReportByMail">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="*">
                    <PropertyRead>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </PropertyRead>
                    <PropertyWrite/>
                    <ServiceInvoke/>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="GenerateDailyReport">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="GenerateAndSendReport">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
            </InstanceRunTimePermissions>
        </ThingShape>
    </ThingShapes>
</Entities>
