<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Entities build="b2319" majorVersion="8" minorVersion="4" modelPersistenceProviderPackage="PostgresPersistenceProviderPackage" revision="4" schemaVersion="1041" universal="">
    <Things>
        <Thing description="" documentationContent="" effectiveThingPackage="ConfiguredThing" enabled="true" homeMashup="" identifier="" lastModifiedDate="2019-11-19T09:49:47.677Z" name="BayerProductionPlanPage" projectName="BayerIoT" published="false" tags="Applications:Bayer" thingTemplate="GenericThing" valueStream="">
            <avatar/>
            <DesignTimePermissions>
                <Create/>
                <Read/>
                <Update/>
                <Delete/>
                <Metadata/>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions resourceName="GetProductionPlanStatusFormatted">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal isPermitted="true" name="Bayer:PerformanceDashboard" type="OrganizationalUnit"/>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions/>
            <ConfigurationTables/>
            <ThingShape>
                <PropertyDefinitions/>
                <ServiceDefinitions>
                    <ServiceDefinition aspect.isAsync="false" category="" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetProductionPlanStatusFormatted">
                        <ResultType aspect.dataShape="BayerProductionPlanStatusFormattedDataShape" baseType="INFOTABLE" description="" name="result" ordinal="0"/>
                        <ParameterDefinitions>
                            <FieldDefinition aspect.thingTemplate="BayerProductionLine" baseType="THINGNAME" description="" name="productionLine" ordinal="1"/>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions/>
                <ServiceMappings/>
                <ServiceImplementations>
                    <ServiceImplementation description="" handlerName="Script" name="GetProductionPlanStatusFormatted">
                        <ConfigurationTables>
                            <ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var cambioTransl = Resources["RuntimeLocalizationFunctions"].GetEffectiveToken({token: "Bayer.Cambio"});
                                        
                                        var result =  Things["BayerDBDataProvider"].GetProductionPlanForLine({line: productionLine});
                                        
                                        var params = {
                                        	types: "STRING,STRING,STRING,STRING" /* STRING */,
                                        	t: result /* INFOTABLE */,
                                        	columns: "statusFormatted,statusState,productDescriptionTranslated,productIdTranslated" /* STRING */,
                                        	expressions:
                                            "status === 'COMPLETED' ? 'Completed' :" +
                                            	"status === 'INPROGRESS' ? 'Running' : " +
                                            	"status === 'PENDING' ? 'Scheduled' : ''," + /* 2nd col */
                                            "productId === 'Cambio' ? 'Cambio' : status === 'COMPLETED' ? 'Completed' :" +
                                            	"status === 'INPROGRESS' ? 'Running' : " +
                                            	"status === 'PENDING' ? 'Scheduled' : ''," +
                                            "productId === 'Cambio' ? '" + cambioTransl + "' : productDescription," +
                                            "productId === 'Cambio' ? '' : productId"
                                        };
                                        
                                        result = Resources["InfoTableFunctions"].DeriveFields(params);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions/>
            </ThingShape>
            <PropertyBindings/>
            <RemotePropertyBindings/>
            <RemoteServiceBindings/>
            <RemoteEventBindings/>
            <AlertConfigurations/>
            <ImplementedShapes/>
            <ThingProperties/>
        </Thing>
    </Things>
</Entities>
