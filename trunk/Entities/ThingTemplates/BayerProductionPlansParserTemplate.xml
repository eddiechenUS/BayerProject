<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b2319"
 majorVersion="8"
 minorVersion="4"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="4"
 schemaVersion="1041"
 universal="">
    <ThingTemplates>
        <ThingTemplate
         baseThingTemplate="GenericThing"
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         homeMashup=""
         lastModifiedDate="2019-11-06T09:58:56.887Z"
         name="BayerProductionPlansParserTemplate"
         projectName="BayerIoT"
         tags="Applications:BayerProductionPlans;Applications:Bayer"
         thingPackage=""
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions>
                <ConfigurationTableDefinition
                 category=""
                 dataShapeName="BayerProductionPlansParserColumnsMappingDataShape"
                 description=""
                 isHidden="false"
                 isMultiRow="true"
                 name="ColumnMappings"
                 ordinal="0"
                 source="IMPORT"></ConfigurationTableDefinition>
                <ConfigurationTableDefinition
                 category=""
                 dataShapeName="BayerProductionPlansParserSettingsDataShape"
                 description=""
                 isHidden="false"
                 isMultiRow="false"
                 name="ParserSettings"
                 ordinal="0"
                 source="IMPORT"></ConfigurationTableDefinition>
            </ConfigurationTableDefinitions>
            <ConfigurationTables>
                <ConfigurationTable
                 description=""
                 isMultiRow="true"
                 name="ColumnMappings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.isPrimaryKey="false"
                             baseType="STRING"
                             description=""
                             name="csvColumnName"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.isPrimaryKey="true"
                             baseType="STRING"
                             description=""
                             name="targetFieldName"
                             ordinal="2"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows></Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 description=""
                 isMultiRow="false"
                 name="ParserSettings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.friendlyName=""
                             aspect.isPrimaryKey="false"
                             baseType="PASSWORD"
                             description=""
                             name="appKey"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue=";"
                             aspect.isPrimaryKey="false"
                             baseType="STRING"
                             description=""
                             name="csvDelimiter"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="/"
                             aspect.friendlyName=""
                             aspect.isPrimaryKey="true"
                             baseType="STRING"
                             description=""
                             name="path"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="BayerCSVRepository"
                             aspect.friendlyName=""
                             aspect.isPrimaryKey="true"
                             aspect.thingTemplate="FileRepository"
                             baseType="THINGNAME"
                             description=""
                             name="repository"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="http://localhost:8080/Thingworx/Things/BayerProductionPlansParser/Services/ProcessData"
                             aspect.friendlyName=""
                             aspect.isPrimaryKey="false"
                             baseType="STRING"
                             description=""
                             name="targetServiceUrl"
                             ordinal="3"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <appKey></appKey>
                            <csvDelimiter>
                            <![CDATA[
                            ;
                            ]]>
                            </csvDelimiter>
                            <path></path>
                            <repository></repository>
                            <targetServiceUrl></targetServiceUrl>
                        </Row>
                    </Rows>
                </ConfigurationTable>
            </ConfigurationTables>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <ThingShape>
                <PropertyDefinitions></PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetCsvColumnName">
                        <ResultType
                         baseType="STRING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description=""
                             name="fieldName"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetParserSettings">
                        <ResultType
                         aspect.dataShape="BayerProductionPlansParserSettingsDataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="ParseFileAndPushData">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description=""
                             name="fileName"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description="TargetEndpoint, that receives data from CSV file and processes it."
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="ProcessData">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="INFOTABLE"
                             description=""
                             name="data"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetCsvColumnName">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var result = '';
                                        
                                        try {
                                            result =  me.GetConfigurationTableRow({
                                                key: fieldName /* STRING */,
                                                tableName: "ColumnMappings" /* STRING */
                                            }).csvColumnName;
                                        }
                                        catch (ex) {
                                            logger.error(me.name + ".GetCsvColumnName " + ex);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetParserSettings">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // table: INFOTABLE dataShape: ""
                                        var result =  me.GetConfigurationTable({
                                        	tableName: "ParserSettings" /* STRING */
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="ParseFileAndPushData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // parse the file and push it to the other instance of TWX
                                        
                                        // result: INFOTABLE dataShape: "BayerProductionPlansParserSettingsDataShape"
                                        var settings =  me.GetParserSettings();
                                        
                                        var data = null;
                                        
                                        try {
                                            // result: INFOTABLE dataShape: ""
                                            data =  Resources["TTPSC.Utilities.UtilityServices"].ParseCSV({
                                                path: settings.path /* STRING */,
                                                delimiter: settings.csvDelimiter /* STRING */,
                                                repository: settings.repository /* THINGNAME */
                                            });
                                        }
                                        catch (ex) {
                                            logger.error(me.name + ".ParseFileAndPushData error parsing CSV file: " + ex);
                                        }
                                        
                                        if (data) {
                                            try {
                                                var params = {
                                                    proxyScheme: undefined /* STRING */,
                                                    headers: undefined /* JSON */,
                                                    ignoreSSLErrors: undefined /* BOOLEAN */,
                                                    useNTLM: undefined /* BOOLEAN */,
                                                    workstation: undefined /* STRING */,
                                                    useProxy: undefined /* BOOLEAN */,
                                                    withCookies: undefined /* BOOLEAN */,
                                                    proxyHost: undefined /* STRING */,
                                                    url: settings.targetServiceUrl /* STRING */,
                                                    content: data.ToJSON() /* JSON */,
                                                    timeout: undefined /* NUMBER */,
                                                    proxyPort: undefined /* INTEGER */,
                                                    password: undefined /* STRING */,
                                                    domain: undefined /* STRING */,
                                                    username: undefined /* STRING */
                                                };
                                        
                                                // result: JSON
                                                var result = Resources["ContentLoaderFunctions"].PostJSON(params);
                                            }
                                            catch (ex) {
                                                logger.error(me.name + ".ParseFileAndPushData error pushing data: " + ex);
                                            }
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="ProcessData">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // receive data pushed by the other instance of TWX and process it
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <ImplementedShapes></ImplementedShapes>
            <SharedConfigurationTables></SharedConfigurationTables>
            <InstanceDesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </InstanceDesignTimePermissions>
            <InstanceRunTimePermissions></InstanceRunTimePermissions>
            <InstanceVisibilityPermissions>
                <Visibility></Visibility>
            </InstanceVisibilityPermissions>
        </ThingTemplate>
    </ThingTemplates>
</Entities>
