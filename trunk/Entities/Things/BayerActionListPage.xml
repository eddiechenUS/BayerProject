<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b140"
 majorVersion="8"
 minorVersion="2"
 modelPersistenceProviderPackage="H2PersistenceProviderPackage"
 revision="1"
 schemaVersion="1020"
 universal="">
    <Things>
        <Thing
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         enabled="true"
         homeMashup=""
         identifier=""
         lastModifiedDate="2018-12-05T02:54:20.687-08:00"
         name="BayerActionListPage"
         projectName="BayerIoT"
         published="false"
         tags="Applications:Bayer"
         thingTemplate="BayerPageController"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTables></ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions>
                    <PropertyDefinition
                     aspect.dataChangeType="VALUE"
                     aspect.dataShape="GenericStringList"
                     aspect.isPersistent="true"
                     baseType="INFOTABLE"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="actionListStatus"
                     ordinal="2"></PropertyDefinition>
                </PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="AddActionList">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="USERNAME"
                             description=""
                             name="assignedTo"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="DATETIME"
                             description=""
                             name="dueDate"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="problemDescription"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="THINGNAME"
                             description=""
                             name="productionLine"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="solutionDescription"
                             ordinal="6"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="EditActionList">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="USERNAME"
                             description=""
                             name="assignedTo"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="DATETIME"
                             description=""
                             name="createdTime"
                             ordinal="7"></FieldDefinition>
                            <FieldDefinition
                             baseType="DATETIME"
                             description=""
                             name="dueDate"
                             ordinal="4"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="problemDescription"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="THINGNAME"
                             description=""
                             name="productionLine"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="solutionDescription"
                             ordinal="6"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="false"
                             baseType="STRING"
                             description=""
                             name="status"
                             ordinal="3"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="ExportActionListCSV">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.dataShape="BayerActionListDataShape"
                             aspect.isRequired="true"
                             baseType="INFOTABLE"
                             description=""
                             name="actionList"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="USERNAME"
                             description=""
                             name="recipient"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetActionList">
                        <ResultType
                         aspect.dataShape="BayerActionListDataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="USERNAME"
                             description=""
                             name="assignedTo"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             baseType="DATETIME"
                             description=""
                             name="createdFrom"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             baseType="DATETIME"
                             description=""
                             name="createdTo"
                             ordinal="6"></FieldDefinition>
                            <FieldDefinition
                             baseType="DATETIME"
                             description=""
                             name="dueDate"
                             ordinal="6"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="THINGNAME"
                             description=""
                             name="productionLine"
                             ordinal="6"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="status"
                             ordinal="4"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetActionListStatus">
                        <ResultType
                         aspect.dataShape="GenericStringList"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetActionListUsers">
                        <ResultType
                         aspect.dataShape="GroupMember"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetActionListUsersForCSV">
                        <ResultType
                         aspect.dataShape="GroupMember"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetClearControls">
                        <ResultType
                         aspect.dataShape="GenericStringList"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="AddActionList">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var params = {
                                        	solutionDescription: solutionDescription /* STRING */,
                                        	dueDate: dueDate /* DATETIME */,
                                        	problemDescription: problemDescription /* STRING */,
                                        	assignedTo: assignedTo /* USERNAME */
                                        };
                                        
                                        // no return
                                        Things[productionLine].AddAction(params);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="EditActionList">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var params = {
                                        	solutionDescription: solutionDescription /* STRING */,
                                        	dueDate: dueDate /* DATETIME */,
                                        	problemDescription: problemDescription /* STRING */,
                                        	createdTime: createdTime /* DATETIME */,
                                        	assignedTo: assignedTo /* USERNAME */,
                                        	status: status /* STRING */
                                        };
                                        
                                        // no return
                                        Things[productionLine].EditAction(params);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="ExportActionListCSV">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var textCSV = "assignedTo;status;createdTime;dueDate;problemDescription;solutionDescription;productionLine\n";
                                        
                                        for (var i = 0; i < actionList.rows.length; i++) {
                                            var row = actionList.rows[i];
                                            
                                            textCSV += row.assignedTo + ";"
                                                	+ row.status
                                            		+ ";"
                                            		+ (row.createdTime ? dateFormatISO(row.createdTime) : "")
                                            		+ ";"
                                            		+ (row.dueDate ? dateFormatISO(row.dueDate) : "")
                                            		+ ";"
                                            		+ (row.problemDescription ? row.problemDescription : "")
                                            		+ ";"
                                            		+ (row.solutionDescription ? row.solutionDescription : "")
                                            		+ ";"
                                            		+ row.productionLine
                                            		+ "\n";
                                        }
                                        
                                        
                                        // generateGUID():STRING
                                        var fileName = dateFormat(new Date(), "yyyyMMddHHmmssSSS") + ".csv";
                                        var path = "/exports/" + fileName;
                                        
                                        var params = {
                                        	path: path /* STRING */,
                                        	data: textCSV /* STRING */,
                                        	overwrite: true /* BOOLEAN */
                                        };
                                        
                                        // no return
                                        Things["BayerCSVRepository"].CreateTextFile(params);
                                        
                                        
                                        var params = {
                                        	cc: undefined /* STRING */,
                                        	path: path /* STRING */,
                                        	bcc: undefined /* STRING */,
                                        	subject: "Action list export" /* STRING */,
                                        	fileRepository: "BayerCSVRepository" /* THINGNAME */,
                                        	from: Users[recipient].emailAddress /* STRING */,
                                        	attachmentName: fileName /* STRING */,
                                        	to: Users[recipient].emailAddress /* STRING */,
                                        	mimeType: "text/csv" /* STRING */,
                                        	body: undefined /* HTML */
                                        };
                                        
                                        // no return
                                        Things["BayerMailServer2"].SendMessageWithAttachment(params);
                                        //Things["TestMailServer"].SendMessageWithAttachment(params);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetActionList">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var query = {
                                            "sorts": [
                                                {
                                                    "fieldName": "dueDate",
                                                    "isAscending": false,
                                                    "isCaseSensitive": false
                                                }
                                                ,
                                                {
                                                    "fieldName": "status",
                                                    "isAscending": false,
                                                    "isCaseSensitive": false
                                                }
                                                ,
                                                {
                                                    "fieldName": "assignedTo",
                                                    "isAscending": true,
                                                    "isCaseSensitive": false
                                                }
                                            ],
                                            "filters": {
                                                "type": "AND",
                                                "filters": [
                                                    {
                                                        "fieldName": "productionLine",
                                                        "type": "EQ",
                                                        "value": productionLine
                                                    }
                                                ]
                                            }
                                        };
                                        
                                        var index = query.filters.filters.length;
                                        
                                        if (status) {
                                            if(status.indexOf("Open") !== -1) {
                                        logger.warn("testetste");
                                                query.filters.filters.push({});
                                                query.filters.filters[index]["fieldName"] = "status";
                                                query.filters.filters[index]["type"] = "EQ";
                                                query.filters.filters[index]["value"] = "Open";
                                                index = query.filters.filters.length;
                                            }
                                            else {
                                                query.filters.filters.push({});
                                                query.filters.filters[index]["fieldName"] = "status";
                                                query.filters.filters[index]["type"] = "EQ";
                                                query.filters.filters[index]["value"] = status;
                                                index = query.filters.filters.length;
                                            }
                                        }
                                        if (dueDate) {
                                            query.filters.filters.push({});
                                            query.filters.filters[index]["fieldName"] = "dueDate";
                                            query.filters.filters[index]["type"] = "EQ";
                                            query.filters.filters[index]["value"] = dueDate;
                                            index = query.filters.filters.length;
                                        }
                                        if (assignedTo) {
                                            query.filters.filters.push({});
                                            query.filters.filters[index]["fieldName"] = "assignedTo";
                                            query.filters.filters[index]["type"] = "EQ";
                                            query.filters.filters[index]["value"] = assignedTo;
                                            index = query.filters.filters.length;
                                        }
                                        
                                        if (createdFrom && createdTo) {
                                            query.filters.filters.push({});
                                            query.filters.filters[index]["fieldName"] = "createdTime";
                                            query.filters.filters[index]["type"] = "Between";
                                            query.filters.filters[index]["from"] = createdFrom;
                                            query.filters.filters[index]["to"] = createdTo;
                                            index = query.filters.filters.length;
                                        }
                                        
                                        // result: INFOTABLE dataShape: "BayerActionListDataShape"
                                        var result =  Things[productionLine].QueryActions({
                                            maxItems: undefined /* INTEGER */,
                                            query: query /* QUERY */
                                        });
                                        
                                        if (status === "Open (before Due Date)" ||  status === "Open (after Due Date)") {
                                            for (var i = 0; i < result.rows.length; i++) {
                                                if(result[i].status === "Open") {
                                                    result[i].status = status;
                                                }
                                            }
                                        }
                                        else {
                                            for (var i = 0; i < result.rows.length; i++) {
                                                if(result[i].status === "Open") {
                                                    result[i].status = result[i].dueDate >= (new Date()) ? "Open (before Due Date)" : "Open (after Due Date)";
                                                }
                                            }
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetActionListStatus">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        result = me.actionListStatus;
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetActionListUsers">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        result = Groups["BayerUsers"].GetGroupMembers();
                                        result.AddRow({ name: "", description: "", type: "User" });
                                        
                                        var sort = new Object();
                                        sort.name = "name";
                                        sort.ascending = true;
                                        result.Sort(sort);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetActionListUsersForCSV">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        result = Groups["BayerUsers"].GetGroupMembers();
                                        
                                        var sort = new Object();
                                        sort.name = "name";
                                        sort.ascending = true;
                                        result.Sort(sort);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetClearControls">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var params = {
                                        	infoTableName : "InfoTable",
                                        	dataShapeName : "GenericStringList"
                                        };
                                        
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(GenericStringList)
                                        var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
                                        var row = new Object();
                                        row.item = "";
                                        result.AddRow(row);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations>
                <AlertDefinitions
                 name="actionListStatus"></AlertDefinitions>
            </AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties>
                <actionListStatus>
                    <Value>
                        <infoTable>
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="true"
                                     baseType="STRING"
                                     description="Item"
                                     name="item"
                                     ordinal="1"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <item></item>
                                </Row>
                                <Row>
                                    <item>
                                    <![CDATA[
                                    Closed
                                    ]]>
                                    </item>
                                </Row>
                                <Row>
                                    <item>
                                    <![CDATA[
                                    In Progress
                                    ]]>
                                    </item>
                                </Row>
                                <Row>
                                    <item>
                                    <![CDATA[
                                    Open (before Due Date)
                                    ]]>
                                    </item>
                                </Row>
                                <Row>
                                    <item>
                                    <![CDATA[
                                    Open (after Due Date)
                                    ]]>
                                    </item>
                                </Row>
                            </Rows>
                        </infoTable>
                    </Value>
                    <Timestamp>2018-06-20T04:59:06.326-07:00</Timestamp>
                    <Quality>GOOD</Quality>
                </actionListStatus>
            </ThingProperties>
        </Thing>
    </Things>
</Entities>
