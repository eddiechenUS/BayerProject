<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b140"
 majorVersion="8"
 minorVersion="2"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="1"
 schemaVersion="1020"
 universal="">
    <Things>
        <Thing
         description="Executes every 1 minute at 2 seconds."
         documentationContent=""
         effectiveThingPackage="SchedulerThing"
         enabled="true"
         homeMashup=""
         identifier=""
         lastModifiedDate="2018-05-24T12:08:13.754Z"
         name="BayerSchedulerThing"
         projectName="BayerIoT"
         published="false"
         tags="Applications:Bayer"
         thingTemplate="Scheduler"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTables>
                <ConfigurationTable
                 description="General Settings"
                 isMultiRow="false"
                 name="Settings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.defaultValue="true"
                             baseType="BOOLEAN"
                             description="Automatically enable scheduler on startup"
                             name="enabled"
                             ordinal="0"></FieldDefinition>
                            <FieldDefinition
                             baseType="USERNAME"
                             description="User context in which to run event handlers"
                             name="runAsUser"
                             ordinal="0"></FieldDefinition>
                            <FieldDefinition
                             aspect.defaultValue="0 0/1 * * * ?"
                             baseType="SCHEDULE"
                             description="Execution Schedule (Cron String)"
                             name="schedule"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <enabled>true</enabled>
                            <runAsUser>
                            <![CDATA[
                            Administrator
                            ]]>
                            </runAsUser>
                            <schedule>
                            <![CDATA[
                            2 0/1 * * * ? *
                            ]]>
                            </schedule>
                        </Row>
                    </Rows>
                </ConfigurationTable>
            </ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions></PropertyDefinitions>
                <ServiceDefinitions></ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations></ServiceImplementations>
                <Subscriptions>
                    <Subscription
                     enabled="true"
                     eventName="ScheduledEvent"
                     source=""
                     sourceProperty=""
                     sourceType="Thing">
                        <ServiceImplementation
                         description=""
                         handlerName="Script"
                         name="Event.ScheduledEvent">
                            <ConfigurationTables>
                                <ConfigurationTable
                                 description=""
                                 isMultiRow="false"
                                 name="Script"
                                 ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition
                                             baseType="STRING"
                                             description="code"
                                             name="code"
                                             ordinal="0"></FieldDefinition>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            logger.debug("Event fired: " + eventData.timestamp);
                                            
                                            // result: INFOTABLE dataShape: RootEntityList
                                            var productionLines = ThingTemplates["BayerProductionLine"].GetImplementingThings();
                                            
                                            var minutesMod6 = eventData.timestamp.getMinutes() % 6;
                                            if (minutesMod6 == 5) {
                                                // UPDATE PRODUCT AND SHIFT AT THE 5th MINUTE OF EACH 6 MINUTES CYCLE (e.g. 1:05:02|1:11:02|1:17:02 etc)
                                                logger.debug("Update shift and product event");
                                                
                                                var tableLength = productionLines.rows.length;
                                            
                                                for (var x = 0; x < tableLength; x++) {
                                                    var row = productionLines.rows[x];
                                                    
                                                    // no return
                                                    Things[row.name].UpdateProduct({eventData: eventData});
                                                    Things[row.name].UpdateShift({eventData: eventData});
                                                }
                                            }
                                            
                                            if (eventData.timestamp.getMinutes() == 0) {
                                                // SCHEDULE SHIFTS AT 6:00:02|14:00:02|22:00:02
                                                
                                                if (eventData.timestamp.getHours() == 6 || eventData.timestamp.getHours() == 14 || eventData.timestamp.getHours() == 22) {
                                                    logger.debug("Schedule shifts event");
                                                    var tableLength = productionLines.rows.length;
                                            
                                                    for (var x = 0; x < tableLength; x++) {
                                                        var row = productionLines.rows[x];
                                                   
                                                        // no return
                                                        Things[row.name].ScheduleShifts();
                                                    }
                                                }
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                </Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties></ThingProperties>
        </Thing>
    </Things>
</Entities>
