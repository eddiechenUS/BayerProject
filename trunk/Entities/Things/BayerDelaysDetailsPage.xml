<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b2319"
 majorVersion="8"
 minorVersion="4"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="4"
 schemaVersion="1041"
 universal="">
    <Things>
        <Thing
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         enabled="true"
         homeMashup=""
         identifier=""
         lastModifiedDate="2019-11-27T12:41:40.791Z"
         name="BayerDelaysDetailsPage"
         projectName="BayerIoT"
         published="false"
         tags="Applications:Bayer"
         thingTemplate="GenericThing"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions
                 resourceName="UpdateDelayInformation">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="Role.BayerProductionLine.Any"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="*">
                    <PropertyRead>
                        <Principal
                         isPermitted="true"
                         name="Role.BayerProductionLine.Any"
                         type="Group"></Principal>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal
                         isPermitted="true"
                         name="Role.BayerProductionLine.Any"
                         type="Group"></Principal>
                    </PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="Role.BayerProductionLine.Any"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke>
                        <Principal
                         isPermitted="true"
                         name="Role.BayerProductionLine.Any"
                         type="Group"></Principal>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal
                         isPermitted="true"
                         name="Role.BayerProductionLine.Any"
                         type="Group"></Principal>
                    </EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="GetRowNumById">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="Role.BayerProductionLine.Any"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
                <Permissions
                 resourceName="GetMachineState">
                    <PropertyRead></PropertyRead>
                    <PropertyWrite></PropertyWrite>
                    <ServiceInvoke>
                        <Principal
                         isPermitted="true"
                         name="Role.BayerProductionLine.Any"
                         type="Group"></Principal>
                    </ServiceInvoke>
                    <EventInvoke></EventInvoke>
                    <EventSubscribe></EventSubscribe>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal
                     isPermitted="true"
                     name="Bayer:PerformanceDashboard"
                     type="OrganizationalUnit"></Principal>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions></ConfigurationTableDefinitions>
            <ConfigurationTables></ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.dataShape="BayerDropDownGenericShape"
                     aspect.isPersistent="true"
                     baseType="INFOTABLE"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="reasonCodes"
                     ordinal="2"></PropertyDefinition>
                    <PropertyDefinition
                     aspect.cacheTime="0.0"
                     aspect.dataChangeType="VALUE"
                     aspect.dataShape="BayerDropDownGenericShape"
                     aspect.isPersistent="true"
                     baseType="INFOTABLE"
                     category=""
                     description=""
                     isLocalOnly="false"
                     name="sources"
                     ordinal="3"></PropertyDefinition>
                </PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetDelayInformation">
                        <ResultType
                         aspect.dataShape="GetDelayShiftDetailsDataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="productionLine"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="INTEGER"
                             description=""
                             name="shiftScheduleId"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetMachineState">
                        <ResultType
                         aspect.dataShape="DelaysDetailsMaschineStateDataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             aspect.thingTemplate="BayerProductionLine"
                             baseType="THINGNAME"
                             description=""
                             name="line"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="INTEGER"
                             description=""
                             name="shiftId"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="DATETIME"
                             description=""
                             name="shiftStartTime"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetRowNumById">
                        <ResultType
                         baseType="INTEGER"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.defaultValue="0"
                             aspect.isRequired="true"
                             baseType="INTEGER"
                             description=""
                             name="shiftId"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.dataShape="BayerShiftSchedulesDataShape"
                             baseType="INFOTABLE"
                             description=""
                             name="shiftSchedules"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="UpdateDelayInformation">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.dataShape="BayerDelayDataShape"
                             baseType="INFOTABLE"
                             description=""
                             name="delayShift"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="NUMBER"
                             description=""
                             name="id"
                             ordinal="3"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetDelayInformation">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var result =  Things["BayerDBDataProvider"].GetDelayShiftDetails({
                                        	productionLine: productionLine /* THINGNAME */,
                                        	shiftScheduleId: shiftScheduleId /* INTEGER */
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetMachineState">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        function createStateTableEntry(duration,category,startTime){
                                        	var entry = new Object();
                                            entry.duration = duration;
                                           	entry.sectionColorState = category;
                                            entry.time = startTime;
                                            return entry;
                                        }
                                        
                                        var events = Things["BayerDBDataProvider"].GetShiftEvents({
                                        	shiftScheduleId: shiftId /* INTEGER */
                                        });
                                        var isCurrentShift = (shiftId === Things[line].currentShiftId);
                                        var shift = 28800000; //ms = 8h
                                        var shiftLeft = shift;
                                        var breakdownEvent;
                                        var breakdownDuration;
                                        // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(DelaysDetailsMaschineStateDataShape)
                                        var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName : "InfoTable",
                                            dataShapeName : "DelaysDetailsMaschineStateDataShape"
                                        });
                                        
                                        var lastEventEndTime = new Date(shiftStartTime);
                                        
                                        if (events.getRowCount() > 0) {
                                            var tableLength = events.rows.length;
                                            //create entry for every event in shift
                                            for (var x=0; x < tableLength; x++) {
                                                var event = events.rows[x];
                                                var duration = event.durationMs;
                                                var eventInfo = new Object();
                                                result.AddRow(createStateTableEntry(duration,event.category,event.startTime));
                                                shiftLeft-= duration;
                                            }
                                            lastEventEndTime = events.rows[tableLength-1].endTime;
                                        }
                                        else{
                                            	if (!isCurrentShift) {
                                            		result.AddRow(createStateTableEntry(shift,'breakdown',lastEventEndTime));
                                            		shiftLeft -= shift;
                                            	}
                                        }
                                        if(isCurrentShift && !Things[line].productionRunning){
                                                breakdownDuration =  dateDifference(Date.now(), lastEventEndTime);
                                                result.AddRow(createStateTableEntry(breakdownDuration,'breakdown',lastEventEndTime));
                                                shiftLeft-= breakdownDuration;
                                        }
                                        if (shiftLeft > 0  && !isCurrentShift){
                                        	breakdownEvent = new Object();
                                                breakdownDuration =  dateDifference(dateAddHours(shiftStartTime, 8), lastEventEndTime);
                                                result.AddRow(createStateTableEntry(breakdownDuration,'breakdown',lastEventEndTime));
                                                shiftLeft-= breakdownDuration;
                                        }
                                        else if (shiftLeft > 0) {
                                           var endShift = new Object();
                                           endShift.time = dateAddMilliseconds(lastEventEndTime, dateDifference(Date.now(), lastEventEndTime));
                                           endShift.sectionColorState = 'unknown';
                                           endShift.duration = shiftLeft;
                                           result.AddRow(endShift);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetRowNumById">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var tableLength = shiftSchedules ? shiftSchedules.rows.length : 0;
                                        
                                        var result = -1;
                                        for (var x = 0; x < tableLength; x++) {
                                        	var row = shiftSchedules.rows[x];
                                        	
                                            if (row.id === shiftId) {
                                                result = x;
                                                break;
                                            }
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="UpdateDelayInformation">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var result =  Things["BayerDBDataProvider"].UpdateDelayShift({
                                        	delayShift: delayShift /* INFOTABLE */,
                                        	id: id /* INTEGER */
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations>
                <AlertDefinitions
                 name="reasonCodes"></AlertDefinitions>
                <AlertDefinitions
                 name="sources"></AlertDefinitions>
            </AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties>
                <reasonCodes>
                    <Value>
                        <infoTable>
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     aspect.friendlyName="Name"
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="name"
                                     ordinal="1"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="value"
                                     ordinal="2"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <name>
                                    <![CDATA[
                                    Ausgeplant
                                    ]]>
                                    </name>
                                    <value>
                                    <![CDATA[
                                    planned
                                    ]]>
                                    </value>
                                </Row>
                                <Row>
                                    <name>
                                    <![CDATA[
                                    Kein Personal
                                    ]]>
                                    </name>
                                    <value>
                                    <![CDATA[
                                    no-staff
                                    ]]>
                                    </value>
                                </Row>
                                <Row>
                                    <name>
                                    <![CDATA[
                                    Kein Bulk/Packmittel
                                    ]]>
                                    </name>
                                    <value>
                                    <![CDATA[
                                    no-packaging
                                    ]]>
                                    </value>
                                </Row>
                            </Rows>
                        </infoTable>
                    </Value>
                    <Timestamp>2019-11-25T12:26:35.642Z</Timestamp>
                    <Quality>GOOD</Quality>
                </reasonCodes>
                <sources>
                    <Value>
                        <infoTable>
                            <DataShape>
                                <FieldDefinitions>
                                    <FieldDefinition
                                     aspect.friendlyName="Name"
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="name"
                                     ordinal="1"></FieldDefinition>
                                    <FieldDefinition
                                     aspect.isPrimaryKey="false"
                                     baseType="STRING"
                                     description=""
                                     name="value"
                                     ordinal="2"></FieldDefinition>
                                </FieldDefinitions>
                            </DataShape>
                            <Rows>
                                <Row>
                                    <name>
                                    <![CDATA[
                                    Source Name 1
                                    ]]>
                                    </name>
                                    <value>
                                    <![CDATA[
                                    source1
                                    ]]>
                                    </value>
                                </Row>
                                <Row>
                                    <name>
                                    <![CDATA[
                                    Source Name 2
                                    ]]>
                                    </name>
                                    <value>
                                    <![CDATA[
                                    source2
                                    ]]>
                                    </value>
                                </Row>
                            </Rows>
                        </infoTable>
                    </Value>
                    <Timestamp>2019-11-28T10:45:05.673Z</Timestamp>
                    <Quality>GOOD</Quality>
                </sources>
            </ThingProperties>
        </Thing>
    </Things>
</Entities>
