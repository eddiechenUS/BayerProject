<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b140"
 majorVersion="8"
 minorVersion="2"
 modelPersistenceProviderPackage="H2PersistenceProviderPackage"
 revision="1"
 schemaVersion="1020"
 universal="">
    <Things>
        <Thing
         description=""
         documentationContent=""
         effectiveThingPackage="StreamThing"
         enabled="true"
         homeMashup=""
         identifier=""
         lastModifiedDate="2018-12-05T02:54:20.682-08:00"
         name="BayerShiftSchedules"
         projectName="BayerIoT"
         published="false"
         tags="Applications:Bayer"
         thingTemplate="Stream"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTables>
                <ConfigurationTable
                 description="Data Thing Configuration"
                 isMultiRow="false"
                 name="DataThingSettings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description="Persistence Provider Name"
                             name="persistenceProvider"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <persistenceProvider>
                            <![CDATA[
                            ThingworxPersistenceProvider
                            ]]>
                            </persistenceProvider>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable
                 description="Data Shape Configuration"
                 isMultiRow="false"
                 name="Settings"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.friendlyName="Data Shape"
                             baseType="DATASHAPENAME"
                             description="Data shape"
                             name="dataShape"
                             ordinal="0"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <accumulatedDataShape>
                                <json>
                                <![CDATA[
                                {"fieldDefinitions":{"shiftSchedule":{"name":"shiftSchedule","aspects":{"dataShape":"BayerScheduleDataShape"},"description":"","baseType":"INFOTABLE","ordinal":0},"totalQuantityProduced":{"name":"totalQuantityProduced","aspects":{},"description":"","baseType":"NUMBER","ordinal":1},"totalTargetQuantity":{"name":"totalTargetQuantity","aspects":{},"description":"","baseType":"NUMBER","ordinal":2}}}
                                ]]>
                                </json>
                            </accumulatedDataShape>
                            <dataShape>
                            <![CDATA[
                            BayerShiftSchedulesDataShape
                            ]]>
                            </dataShape>
                        </Row>
                    </Rows>
                </ConfigurationTable>
            </ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions></PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="UpdateSchedule">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="STRING"
                             description=""
                             name="id"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             aspect.thingTemplate="BayerProductionLine"
                             baseType="THINGNAME"
                             description=""
                             name="line"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="DATETIME"
                             description=""
                             name="time"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="UpdateSchedule">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var params = {
                                        	streamEntryId: id /* STRING */
                                        };
                                        
                                        // result: INFOTABLE dataShape: "undefined"
                                        var entry = me.GetStreamEntry(params);
                                        
                                        var tableLength = entry.shiftSchedule.rows.length;
                                        
                                        for (var x = 0; x < tableLength; x++) {
                                        	var row = entry.shiftSchedule.rows[x];
                                        	
                                            if (row.time.getHours() == time.getHours() && row.time.getMinutes() == time.getMinutes()) {
                                                entry.totalQuantityProduced -= row.quantityProduced;
                                                row.quantityProduced = 0;
                                            }
                                        }
                                        
                                        
                                        var values = me.CreateValues();
                                        
                                        values.shiftSchedule = entry.shiftSchedule; //INFOTABLE
                                        values.totalQuantityProduced = entry.totalQuantityProduced; //NUMBER
                                        values.totalTargetQuantity = entry.totalTargetQuantity; //NUMBER
                                        
                                        var params = {
                                        	values: values /* INFOTABLE*/,
                                        	streamEntryId: id /* STRING */,
                                        	location: undefined /* LOCATION */,
                                        	source: line /* STRING */,
                                        	tags: undefined /* TAGS */
                                        };
                                        
                                        me.UpdateStreamEntry(params);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties></ThingProperties>
        </Thing>
    </Things>
</Entities>
