<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b140"
 majorVersion="8"
 minorVersion="2"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="1"
 schemaVersion="1020"
 universal="">
    <Things>
        <Thing
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         enabled="true"
         homeMashup=""
         identifier=""
         lastModifiedDate="2018-06-18T09:59:54.071Z"
         name="BayerReportsPage"
         projectName="BayerIoT"
         published="false"
         tags="Applications:Bayer"
         thingTemplate="BayerPageController"
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTables></ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions></PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetChangeoverReport">
                        <ResultType
                         aspect.dataShape="BayerChangeoverTimesDataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="DATETIME"
                             description=""
                             name="endTime"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             aspect.thingTemplate="BayerProductionLine"
                             baseType="THINGNAME"
                             description=""
                             name="lineName"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="DATETIME"
                             description=""
                             name="startTime"
                             ordinal="2"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetProblemsAndIssues">
                        <ResultType
                         aspect.dataShape="BayerProblemsAndIssuesDataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.thingTemplate="BayerProductionLine"
                             baseType="THINGNAME"
                             description=""
                             name="lineName"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="DATETIME"
                             description=""
                             name="startTime"
                             ordinal="3"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetProductionPerformance">
                        <ResultType
                         aspect.dataShape="BayerProductionPerformanceDataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="DATETIME"
                             description=""
                             name="endTime"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             aspect.thingTemplate="BayerProductionLine"
                             baseType="THINGNAME"
                             description=""
                             name="lineName"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             aspect.isRequired="true"
                             baseType="DATETIME"
                             description=""
                             name="startTime"
                             ordinal="1"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetChangeoverReport">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        if (lineName) {
                                            var params = {
                                                startTime: startTime /* DATETIME */,
                                                endTime: endTime /* DATETIME */
                                            };
                                        
                                            // result: INFOTABLE dataShape: BayerChangeoverTimesDataShape
                                            var result = Things[lineName].GetChangeoverTimes(params);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetProblemsAndIssues">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var shifts = {
                                            shift1 : startTime,
                                            shift2 : dateAddHours(startTime, 8),
                                            shift3 : dateAddHours(startTime, 16)
                                        }
                                        
                                        var params = {
                                            infoTableName : "InfoTable",
                                            dataShapeName : "BayerProblemsAndIssuesDataShape"
                                        };
                                        
                                        var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
                                        
                                        if (lineName) {
                                            for (var i = 1; i < 4; i++) {
                                                var params = {
                                                    shiftStart: shifts["shift" + i] /* DATETIME */
                                                };
                                        
                                                var issuesIT = Things[lineName].GetIssues(params);
                                        
                                                for(var j = 0; j < issuesIT.rows.length; j++) {
                                                    var row = new Object();
                                                    row.Shift = i;
                                                    row.IssueDescription = issuesIT.getRow(j).problem;
                                                    row.Duration = issuesIT.getRow(j).duration;
                                                    row.IssueSolution = issuesIT.getRow(j).solution;
                                                    row.IssueCategory = issuesIT.getRow(j).category;
                                                    result.AddRow(row);
                                                }
                                            }
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetProductionPerformance">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description="Script"
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        if (lineName) {
                                            var params = {
                                                startTime: startTime /* DATETIME */,
                                                endTime: endTime /* DATETIME */
                                            };
                                        
                                            // result: INFOTABLE dataShape: BayerDailyPerformanceDataShape
                                            var dailyPerformance = Things[lineName].GetDailyPerformanceForTimeframe(params);
                                        
                                            var params = {
                                                infoTableName : "InfoTable",
                                                dataShapeName : "BayerProductionPerformanceDataShape"
                                            };
                                        
                                            // CreateInfoTableFromDataShape(infoTableName:STRING("InfoTable"), dataShapeName:STRING):INFOTABLE(BayerProductionPerformanceDataShape)
                                            var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape(params);
                                        
                                            if (dailyPerformance.rows.length > 0) {
                                                yesterdayPerformance = dailyPerformance.dailyPerformance;
                                                for (var i = 0; i < yesterdayPerformance.rows.length; i++) {
                                                    var row = new Object();
                                                    row.Shift = yesterdayPerformance[i].shift.replace("Shift ", "");
                                                    row.ActualQuantity = yesterdayPerformance[i].quantityProduced;
                                                    row.TargetQuantity = yesterdayPerformance[i].targetQuantity;
                                                    row.GapPsc = yesterdayPerformance[i].quantityProduced - yesterdayPerformance[i].targetQuantity;
                                                    result.AddRow(row);
                                                }
                                            }
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <ImplementedShapes></ImplementedShapes>
            <ThingProperties></ThingProperties>
        </Thing>
    </Things>
</Entities>
