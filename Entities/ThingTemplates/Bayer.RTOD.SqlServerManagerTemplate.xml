<?xml version="1.0" encoding="UTF-8"?>
<Entities
 build="b222"
 majorVersion="8"
 minorVersion="5"
 modelPersistenceProviderPackage="PostgresPersistenceProviderPackage"
 revision="4"
 schemaVersion="1053"
 universal="">
    <ThingTemplates>
        <ThingTemplate
         baseThingTemplate="GenericThing"
         description=""
         documentationContent=""
         effectiveThingPackage="ConfiguredThing"
         homeMashup=""
         lastModifiedDate="2021-06-07T11:18:33.943Z"
         name="Bayer.RTOD.SqlServerManagerTemplate"
         projectName="BayerRTOD"
         tags="Applications:Bayer"
         thingPackage=""
         valueStream="">
            <avatar></avatar>
            <DesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </DesignTimePermissions>
            <RunTimePermissions></RunTimePermissions>
            <VisibilityPermissions>
                <Visibility></Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions>
                <ConfigurationTableDefinition
                 category=""
                 dataShapeName="Bayer.RTOD.SqlServerProviderConfigurationDataShape"
                 description=""
                 isHidden="false"
                 isMultiRow="false"
                 name="SqlServerProvider"
                 ordinal="0"
                 source="IMPORT"></ConfigurationTableDefinition>
            </ConfigurationTableDefinitions>
            <ConfigurationTables>
                <ConfigurationTable
                 description=""
                 isMultiRow="false"
                 name="SqlServerProvider"
                 ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition
                             aspect.defaultValue="Bayer.RTOD.SqlServerProviderThing"
                             aspect.isPrimaryKey="true"
                             aspect.thingTemplate="Bayer.RTOD.SqlServerProviderTemplate"
                             baseType="THINGNAME"
                             description=""
                             name="provider"
                             ordinal="1"></FieldDefinition>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <provider>
                            <![CDATA[
                            Bayer.RTOD.SqlServerProviderThing
                            ]]>
                            </provider>
                        </Row>
                    </Rows>
                </ConfigurationTable>
            </ConfigurationTables>
            <PropertyBindings></PropertyBindings>
            <RemotePropertyBindings></RemotePropertyBindings>
            <RemoteServiceBindings></RemoteServiceBindings>
            <RemoteEventBindings></RemoteEventBindings>
            <AlertConfigurations></AlertConfigurations>
            <ThingShape>
                <PropertyDefinitions></PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="GetSqlServerProvider">
                        <ResultType
                         aspect.dataShape="Bayer.RTOD.SqlServerProviderConfigurationDataShape"
                         baseType="INFOTABLE"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions></ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition
                     aspect.isAsync="false"
                     category=""
                     description=""
                     isAllowOverride="false"
                     isLocalOnly="false"
                     isOpen="false"
                     isPrivate="false"
                     name="SplitEvent">
                        <ResultType
                         baseType="NOTHING"
                         description=""
                         name="result"
                         ordinal="0"></ResultType>
                        <ParameterDefinitions>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="category"
                             ordinal="3"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="description"
                             ordinal="5"></FieldDefinition>
                            <FieldDefinition
                             baseType="INTEGER"
                             description=""
                             name="eventId"
                             ordinal="1"></FieldDefinition>
                            <FieldDefinition
                             baseType="NUMBER"
                             description=""
                             name="minute"
                             ordinal="2"></FieldDefinition>
                            <FieldDefinition
                             baseType="STRING"
                             description=""
                             name="reasonCode"
                             ordinal="4"></FieldDefinition>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions></EventDefinitions>
                <ServiceMappings></ServiceMappings>
                <ServiceImplementations>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="GetSqlServerProvider">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var result = me.GetConfigurationTable({
                                        	tableName: "SqlServerProvider" /* STRING */
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation
                     description=""
                     handlerName="Script"
                     name="SplitEvent">
                        <ConfigurationTables>
                            <ConfigurationTable
                             description=""
                             isMultiRow="false"
                             name="Script"
                             ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition
                                         baseType="STRING"
                                         description="code"
                                         name="code"
                                         ordinal="0"></FieldDefinition>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        try {
                                        	// result: INFOTABLE dataShape: "Bayer.RTOD.SqlServerProviderConfigurationDataShape"
                                        	var provider = me.GetSqlServerProvider().provider;
                                        
                                        	// result: INFOTABLE dataShape: "Bayer.RTOD.SqlServerProviderConfigurationDataShape"
                                        	var connector = Things[provider].GetSQLServerConnector().connector;
                                        
                                        	// result: INFOTABLE dataShape: "Bayer.RTOD.DelayEventDataShape"
                                        	var current = Things["BayerSqlServerConnector"].GetDelayDetailsById({
                                        		delayId: eventId /* INTEGER */
                                        	});
                                        
                                        	var splitTime = dateAddMinutes(current.startTime, minute);
                                        
                                        	Things[connector].UpdateDelayShiftDurationMs({
                                        		id: eventId /* INTEGER */ ,
                                        		description: current.description /* TEXT */ ,
                                        		endTime: splitTime /* DATETIME */ ,
                                        		reasonCode: current.reasonCode /* STRING */ ,
                                        		source: current.source /* STRING */ ,
                                        		totalDurationMs: dateDifference(splitTime, current.startTime) /* LONG */
                                        	});
                                        
                                        	Things[connector].InsertDelayEntry({
                                        		totalDuration: dateDifference(current.endTime, splitTime) /* LONG */ ,
                                        		description: description /* TEXT */ ,
                                        		startTime: splitTime /* DATETIME */ ,
                                        		endTime: current.endTime /* DATETIME */ ,
                                        		reasonCode: reasonCode /* STRING */ ,
                                        		shiftScheduleId: current.shiftScheduleId /* INTEGER */ ,
                                        		source: current.source /* THINGNAME */ ,
                                        		category: category /* STRING */
                                        	});
                                        } catch (e) {
                                        	logger.error("Bayer.RTOD.SqlServerManagerTemplate _ SplitEvent: Error in line " + e.lineNumber + ": " + e);
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions></Subscriptions>
            </ThingShape>
            <ImplementedShapes></ImplementedShapes>
            <SharedConfigurationTables></SharedConfigurationTables>
            <InstanceDesignTimePermissions>
                <Create></Create>
                <Read></Read>
                <Update></Update>
                <Delete></Delete>
                <Metadata></Metadata>
            </InstanceDesignTimePermissions>
            <InstanceRunTimePermissions></InstanceRunTimePermissions>
            <InstanceVisibilityPermissions>
                <Visibility></Visibility>
            </InstanceVisibilityPermissions>
        </ThingTemplate>
    </ThingTemplates>
</Entities>
