<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Entities build="b222" majorVersion="8" minorVersion="5" modelPersistenceProviderPackage="PostgresPersistenceProviderPackage" revision="4" schemaVersion="1053" universal="">
    <ThingTemplates>
        <ThingTemplate baseThingTemplate="GenericThing" description="" documentationContent="" effectiveThingPackage="ConfiguredThing" homeMashup="" lastModifiedDate="2020-07-27T19:48:53.857Z" name="BayerProductionLine" projectName="BayerIoT" tags="Applications:Bayer" thingPackage="" valueStream="">
            <avatar/>
            <DesignTimePermissions>
                <Create/>
                <Read/>
                <Update/>
                <Delete/>
                <Metadata/>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions resourceName="GetImplementingThingsWithData">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerOffice" type="Group"/>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="GetImplementingThings">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="QueryImplementingThings">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="*">
                    <PropertyRead>
                        <Principal isPermitted="true" name="Administrators" type="Group"/>
                    </PropertyRead>
                    <PropertyWrite>
                        <Principal isPermitted="true" name="Administrators" type="Group"/>
                    </PropertyWrite>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Administrators" type="Group"/>
                    </ServiceInvoke>
                    <EventInvoke>
                        <Principal isPermitted="true" name="Administrators" type="Group"/>
                        <Principal isPermitted="true" name="Role.BayerOffice" type="Group"/>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal isPermitted="true" name="Role.BayerOffice" type="Group"/>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </EventSubscribe>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal isPermitted="true" name="Bayer:PerformanceDashboard" type="OrganizationalUnit"/>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions>
                <ConfigurationTableDefinition category="" dataShapeName="GenericStringList" description="" isHidden="false" isMultiRow="true" name="NotificationTargetGroupA" ordinal="0" source="IMPORT"/>
                <ConfigurationTableDefinition category="" dataShapeName="BayerAvailabilityDataShape" description="" isHidden="false" isMultiRow="true" name="Availability" ordinal="0" source="IMPORT"/>
                <ConfigurationTableDefinition category="" dataShapeName="GenericStringList" description="" isHidden="false" isMultiRow="true" name="NotificationTargetGroupB" ordinal="0" source="IMPORT"/>
                <ConfigurationTableDefinition category="" dataShapeName="BayerSameProductChangeoverDataShape" description="" isHidden="false" isMultiRow="true" name="SameProductChangeover" ordinal="0" source="IMPORT"/>
                <ConfigurationTableDefinition category="" dataShapeName="BayerProductionLineConfigurationDataShape" description="" isHidden="false" isMultiRow="false" name="LineConfiguration" ordinal="0" source="IMPORT"/>
                <ConfigurationTableDefinition category="Changeovers" dataShapeName="BayerChangeoversSplitTimeDelays" description="Changeover Split Times" isHidden="false" isMultiRow="false" name="Changeover_SplitTimes" ordinal="10" source="IMPORT"/>
            </ConfigurationTableDefinitions>
            <ConfigurationTables>
                <ConfigurationTable description="" isMultiRow="true" name="Availability" ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition aspect.defaultValue="100" aspect.isPrimaryKey="false" aspect.maximumValue="100" aspect.minimumValue="0" aspect.units="%" baseType="INTEGER" description="" name="availability" ordinal="2"/>
                            <FieldDefinition aspect.isPrimaryKey="true" aspect.maximumValue="23" aspect.minimumValue="0" aspect.units="hour" baseType="INTEGER" description="" name="hour" ordinal="1"/>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <availability>100</availability>
                            <hour>0</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>1</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>2</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>3</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>4</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>5</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>6</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>7</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>8</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>9</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>10</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>11</hour>
                        </Row>
                        <Row>
                            <availability>50</availability>
                            <hour>12</hour>
                        </Row>
                        <Row>
                            <availability>50</availability>
                            <hour>13</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>14</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>15</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>16</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>17</hour>
                        </Row>
                        <Row>
                            <availability>50</availability>
                            <hour>18</hour>
                        </Row>
                        <Row>
                            <availability>50</availability>
                            <hour>19</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>20</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>21</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>22</hour>
                        </Row>
                        <Row>
                            <availability>100</availability>
                            <hour>23</hour>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable description="" isMultiRow="false" name="LineConfiguration" ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition aspect.defaultValue="90" aspect.isPrimaryKey="true" aspect.units="minutes" baseType="INTEGER" description="" name="additionalChangeoverTime" ordinal="1"/>
                            <FieldDefinition aspect.defaultValue="false" aspect.isPrimaryKey="true" baseType="BOOLEAN" description="" name="allowManualAdjustment" ordinal="8"/>
                            <FieldDefinition aspect.defaultValue="BayerChangeoverDefaultCalculationThing" aspect.isPrimaryKey="true" aspect.thingShape="BayerChangeoverCalculationShape" baseType="THINGNAME" description="Changeover Calculation Thing Name" name="changeoverCalculationThing" ordinal="9"/>
                            <FieldDefinition aspect.defaultValue="2.3" aspect.isPrimaryKey="true" aspect.units="minutes" baseType="NUMBER" description="" name="delayMicrostopBreakdownThreshold" ordinal="6"/>
                            <FieldDefinition aspect.defaultValue="3.0" aspect.isPrimaryKey="true" aspect.units="occurences" baseType="NUMBER" description="" name="delayMicrostopCountMax" ordinal="5"/>
                            <FieldDefinition aspect.defaultValue="5.0" aspect.isPrimaryKey="true" aspect.units="minutes" baseType="NUMBER" description="" name="delayMicrostopTimeMax" ordinal="4"/>
                            <FieldDefinition aspect.defaultValue="0.6" aspect.isPrimaryKey="true" aspect.units="multiplier" baseType="NUMBER" description="" name="nominalRateCorrection" ordinal="2"/>
                            <FieldDefinition aspect.defaultValue="false" aspect.isPrimaryKey="true" baseType="BOOLEAN" description="Select &quot;true&quot; if Material Performance Table contains value of blisters per hour (instead of boxes per hour)" name="nominalRateInBlisters" ordinal="7"/>
                            <FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="" name="notificationSender" ordinal="3"/>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <additionalChangeoverTime>90</additionalChangeoverTime>
                            <allowManualAdjustment>false</allowManualAdjustment>
                            <changeoverCalculationThing>
                            <![CDATA[
                            BayerChangeoverDefaultCalculationThing
                            ]]>
                            </changeoverCalculationThing>
                            <delayMicrostopBreakdownThreshold>2.3</delayMicrostopBreakdownThreshold>
                            <delayMicrostopCountMax>3.0</delayMicrostopCountMax>
                            <delayMicrostopTimeMax>5.0</delayMicrostopTimeMax>
                            <nominalRateCorrection>0.6</nominalRateCorrection>
                            <nominalRateInBlisters>false</nominalRateInBlisters>
                            <notificationSender/>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable description="" isMultiRow="true" name="NotificationTargetGroupA" ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="Item" name="item" ordinal="0"/>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows/>
                </ConfigurationTable>
                <ConfigurationTable description="" isMultiRow="true" name="NotificationTargetGroupB" ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="Item" name="item" ordinal="0"/>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows/>
                </ConfigurationTable>
                <ConfigurationTable description="" isMultiRow="true" name="SameProductChangeover" ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition aspect.isPrimaryKey="true" baseType="STRING" description="" name="productCode" ordinal="1"/>
                            <FieldDefinition aspect.isPrimaryKey="false" aspect.units="minutes" baseType="INTEGER" description="" name="time" ordinal="2"/>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows/>
                </ConfigurationTable>
                <ConfigurationTable description="Changeover Split Times" isMultiRow="false" name="Changeover_SplitTimes" ordinal="10">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition aspect.friendlyName="" aspect.isPrimaryKey="true" aspect.units="min" baseType="INTEGER" description="Blister Amount Change" name="blisterAmountChange" ordinal="7"/>
                            <FieldDefinition aspect.friendlyName="" aspect.isPrimaryKey="true" aspect.units="min" baseType="INTEGER" description="Blister Size Change" name="blisterSizeChange" ordinal="5"/>
                            <FieldDefinition aspect.friendlyName="" aspect.isPrimaryKey="true" aspect.units="min" baseType="INTEGER" description="Blister Type Change" name="blisterTypeChange" ordinal="3"/>
                            <FieldDefinition aspect.friendlyName="" aspect.isPrimaryKey="true" aspect.units="min" baseType="INTEGER" description="Box Format Change" name="boxFormatChange" ordinal="6"/>
                            <FieldDefinition aspect.friendlyName="" aspect.isPrimaryKey="true" aspect.units="min" baseType="INTEGER" description="Bundle Format Change" name="bundleFormatChange" ordinal="8"/>
                            <FieldDefinition aspect.friendlyName="" aspect.isPrimaryKey="true" aspect.units="min" baseType="INTEGER" description="Ground Foil Change" name="groundFoilChange" ordinal="4"/>
                            <FieldDefinition aspect.friendlyName="" aspect.isPrimaryKey="true" aspect.units="min" baseType="INTEGER" description="" name="orderChange" ordinal="1"/>
                            <FieldDefinition aspect.friendlyName="" aspect.isPrimaryKey="true" aspect.units="min" baseType="INTEGER" description="Product Change" name="productChange" ordinal="2"/>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <blisterAmountChange>30</blisterAmountChange>
                            <blisterSizeChange>240</blisterSizeChange>
                            <blisterTypeChange>180</blisterTypeChange>
                            <boxFormatChange>40</boxFormatChange>
                            <bundleFormatChange>30</bundleFormatChange>
                            <groundFoilChange>60</groundFoilChange>
                            <orderChange>120</orderChange>
                            <productChange>60</productChange>
                        </Row>
                    </Rows>
                </ConfigurationTable>
            </ConfigurationTables>
            <PropertyBindings/>
            <RemotePropertyBindings/>
            <RemoteServiceBindings/>
            <RemoteEventBindings/>
            <AlertConfigurations>
                <AlertDefinitions name="accidentsCount"/>
                <AlertDefinitions name="displayName"/>
            </AlertConfigurations>
            <ThingShape>
                <PropertyDefinitions>
                    <PropertyDefinition aspect.cacheTime="0.0" aspect.dataChangeType="VALUE" aspect.isLogged="false" aspect.isPersistent="true" aspect.isReadOnly="false" baseType="STRING" category="" description="" isLocalOnly="false" name="displayName" ordinal="1"/>
                </PropertyDefinitions>
                <ServiceDefinitions>
                    <ServiceDefinition aspect.isAsync="false" category="Line Configuration" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetLineConfiguration">
                        <ResultType aspect.dataShape="BayerProductionLineConfigurationDataShape" baseType="INFOTABLE" description="" name="result" ordinal="0"/>
                        <ParameterDefinitions/>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions/>
                <ServiceMappings/>
                <ServiceImplementations>
                    <ServiceImplementation description="" handlerName="Script" name="GetLineConfiguration">
                        <ConfigurationTables>
                            <ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        // table: INFOTABLE dataShape: ""
                                        var result =  me.GetConfigurationTable({
                                        	tableName: "LineConfiguration" /* STRING */
                                        });
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions>
                    <Subscription description="" enabled="true" eventName="ActionListItemChanged" name="OnActionListItemChangedGlobal" source="" sourceProperty="">
                        <ServiceImplementation description="" handlerName="Script" name="OnActionListItemChangedGlobal">
                            <ConfigurationTables>
                                <ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            if (eventData.newValues.assignedTo !== eventData.oldValues.assignedTo && eventData.newValues.assignedTo) {
                                            	me.SendActionAssignmentNotification({
                                            		to: Users[eventData.newValues.assignedTo].mailingAddress /* STRING */ ,
                                            		subject: "Action assigned to you ["+ eventData.newValues.productionLine +"]" /* STRING */ ,
                                            		messageBody:  '<b>Problem Description:</b>' + '<br> \r\n' +
                                            			eventData.newValues.problemDescription + '<br> \r\n' +
                                            			'<b>Solution Description:</b>' + '<br> \r\n' +
                                            			eventData.newValues.solutionDescription + '<br> \r\n' +
                                            			'<b>Due Date:</b>' + '<br> \r\n' +
                                            			eventData.newValues.dueDate + '<br> \r\n' +
                                            			'<b>Status:</b>' + '<br> \r\n' +
                                            			eventData.newValues.status/* STRING */
                                            	});
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                    <Subscription description="" enabled="true" eventName="DataChange" name="OnCurrentProductKeyChangedGlobal" source="" sourceProperty="currentProductKey">
                        <ServiceImplementation description="" handlerName="Script" name="OnCurrentProductKeyChangedGlobal">
                            <ConfigurationTables>
                                <ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            if (eventData.newValue.value != eventData.oldValue.value) {
                                            	me.ResetNotifications();
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                    <Subscription description="" enabled="true" eventName="ScheduledEvent" name="OnSchedulerTickGlobal" source="BayerSchedulerThing" sourceProperty="">
                        <ServiceImplementation description="" handlerName="Script" name="OnSchedulerTickGlobal">
                            <ConfigurationTables>
                                <ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            //
                                            // OnSchedulerTickGlobal subscription
                                            //
                                            var minutesMod6 = eventData.timestamp.getMinutes() % 6;
                                            
                                            if (minutesMod6 == 5) {
                                                // UPDATE PRODUCT AND SHIFT AT THE 5th MINUTE OF EACH 6 MINUTES CYCLE
                                                // (e.g. 1:05:02|1:11:02|1:17:02 etc)
                                                logger.debug(me.name + " Update shift and product event");
                                            
                                                me.UpdateShift({ eventData: eventData });
                                                me.UpdateProduct({ eventData: eventData });
                                            } //? got 5th minute
                                            
                                            if (eventData.timestamp.getMinutes() == 0) {
                                                // SCHEDULE SHIFTS AT 6:00:02|14:00:02|22:00:02
                                                if (eventData.timestamp.getHours() == 6 ||
                                                    eventData.timestamp.getHours() == 14 ||
                                                    eventData.timestamp.getHours() == 22) {
                                                    logger.debug(me.name + " Schedule shifts event");
                                                    // no return
                                                    me.ScheduleShifts();
                                                }
                                            } // got minutes?
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                    <Subscription description="" enabled="true" eventName="DataChange" name="OnShiftChanged" source="" sourceProperty="currentShiftId">
                        <ServiceImplementation description="" handlerName="Script" name="OnShiftChanged">
                            <ConfigurationTables>
                                <ConfigurationTable description="" isMultiRow="false" name="Script" ordinal="0">
                                    <DataShape>
                                        <FieldDefinitions>
                                            <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                        </FieldDefinitions>
                                    </DataShape>
                                    <Rows>
                                        <Row>
                                            <code>
                                            <![CDATA[
                                            me.ProcessEventsOnShiftChange({eventData : eventData});
                                            if (eventData.newValue.value  != eventData.oldValue.value) {
                                            	me.ResetMicrostopDelayProperties();   
                                            }
                                            ]]>
                                            </code>
                                        </Row>
                                    </Rows>
                                </ConfigurationTable>
                            </ConfigurationTables>
                        </ServiceImplementation>
                    </Subscription>
                </Subscriptions>
            </ThingShape>
            <ImplementedShapes>
                <ImplementedShape name="BayerShiftsManagement" type="ThingShape"/>
                <ImplementedShape name="BayerMaintenanceTicketsManagement" type="ThingShape"/>
                <ImplementedShape name="BayerProductionManagement" type="ThingShape"/>
                <ImplementedShape name="BayerDelaysManagement" type="ThingShape"/>
                <ImplementedShape name="BayerExportsManagment" type="ThingShape"/>
                <ImplementedShape name="BayerSafetyManagement" type="ThingShape"/>
                <ImplementedShape name="BayerNotificationsManagement" type="ThingShape"/>
                <ImplementedShape name="BayerReportsGenerator" type="ThingShape"/>
                <ImplementedShape name="BayerActionListManagement" type="ThingShape"/>
            </ImplementedShapes>
            <SharedConfigurationTables/>
            <InstanceDesignTimePermissions>
                <Create/>
                <Read/>
                <Update/>
                <Delete/>
                <Metadata/>
            </InstanceDesignTimePermissions>
            <InstanceRunTimePermissions>
                <Permissions resourceName="ResetMicrostopDelayProperties">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="GetPropertyTime">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="GetShiftsFromNow">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="GetConfigurationTable">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="*">
                    <PropertyRead>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </PropertyRead>
                    <PropertyWrite/>
                    <ServiceInvoke/>
                    <EventInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </EventInvoke>
                    <EventSubscribe>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                    </EventSubscribe>
                </Permissions>
                <Permissions resourceName="GetConfigurationTableRow">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
                <Permissions resourceName="GetLineConfiguration">
                    <PropertyRead/>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="Role.BayerProductionLine.Any" type="Group"/>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
            </InstanceRunTimePermissions>
            <InstanceVisibilityPermissions>
                <Visibility>
                    <Principal isPermitted="true" name="Bayer:PerformanceDashboard" type="OrganizationalUnit"/>
                </Visibility>
            </InstanceVisibilityPermissions>
        </ThingTemplate>
    </ThingTemplates>
</Entities>
