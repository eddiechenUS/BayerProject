<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<Entities build="b222" majorVersion="8" minorVersion="5" modelPersistenceProviderPackage="PostgresPersistenceProviderPackage" revision="4" schemaVersion="1053" universal="">
    <Things>
        <Thing description="" documentationContent="" effectiveThingPackage="DataTableThing" enabled="true" homeMashup="DataTableEditor" identifier="" lastModifiedDate="2020-10-05T09:12:27.454Z" name="BayerMaterialPerformanceTable" projectName="BayerIoT" published="false" tags="Applications:Bayer" thingTemplate="DataTable" valueStream="">
            <avatar/>
            <DesignTimePermissions>
                <Create/>
                <Read/>
                <Update/>
                <Delete/>
                <Metadata/>
            </DesignTimePermissions>
            <RunTimePermissions>
                <Permissions resourceName="*">
                    <PropertyRead>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </PropertyRead>
                    <PropertyWrite/>
                    <ServiceInvoke>
                        <Principal isPermitted="true" name="System" type="User"/>
                    </ServiceInvoke>
                    <EventInvoke/>
                    <EventSubscribe/>
                </Permissions>
            </RunTimePermissions>
            <VisibilityPermissions>
                <Visibility>
                    <Principal isPermitted="true" name="Bayer:PerformanceDashboard" type="OrganizationalUnit"/>
                </Visibility>
            </VisibilityPermissions>
            <ConfigurationTableDefinitions/>
            <ConfigurationTables>
                <ConfigurationTable description="Data Thing Configuration" isMultiRow="false" name="DataThingSettings" ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition baseType="STRING" description="Persistence Provider Name" name="persistenceProvider" ordinal="0"/>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <persistenceProvider>
                            <![CDATA[
                            ThingworxPersistenceProvider
                            ]]>
                            </persistenceProvider>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable description="Data Shape Configuration" isMultiRow="false" name="Settings" ordinal="0">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition aspect.friendlyName="Data Shape" baseType="DATASHAPENAME" description="Data shape" name="dataShape" ordinal="0"/>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows>
                        <Row>
                            <accumulatedDataShape>
                                <json>
                                <![CDATA[
                                {"fieldDefinitions":{"code":{"name":"code","aspects":{"isPrimaryKey":true},"description":"","baseType":"STRING","ordinal":0},"productionLine":{"name":"productionLine","aspects":{"isPrimaryKey":true,"thingTemplate":"BayerProductionLine"},"description":"","baseType":"THINGNAME","ordinal":3},"description":{"name":"description","aspects":{},"description":"","baseType":"STRING","ordinal":1},"nominalRate":{"name":"nominalRate","aspects":{},"description":"Performance at 100%","baseType":"NUMBER","ordinal":2}}}
                                ]]>
                                </json>
                            </accumulatedDataShape>
                            <dataShape>
                            <![CDATA[
                            BayerMaterialPerformanceDataShape
                            ]]>
                            </dataShape>
                        </Row>
                    </Rows>
                </ConfigurationTable>
                <ConfigurationTable description="Index Settings" isMultiRow="true" name="Indexes" ordinal="1">
                    <DataShape>
                        <FieldDefinitions>
                            <FieldDefinition aspect.friendlyName="Index Field Names" baseType="STRING" description="Index fields" name="fieldNames" ordinal="1"/>
                            <FieldDefinition aspect.friendlyName="Index Name" baseType="STRING" description="Index name" name="name" ordinal="0"/>
                        </FieldDefinitions>
                    </DataShape>
                    <Rows/>
                </ConfigurationTable>
            </ConfigurationTables>
            <ThingShape>
                <PropertyDefinitions/>
                <ServiceDefinitions>
                    <ServiceDefinition aspect.isAsync="false" category="Changeover" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetNominalRate">
                        <ResultType baseType="NUMBER" description="" name="result" ordinal="0"/>
                        <ParameterDefinitions>
                            <FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="code" ordinal="2"/>
                            <FieldDefinition aspect.isRequired="true" aspect.thingTemplate="BayerProductionLine" baseType="THINGNAME" description="" name="productionLine" ordinal="1"/>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition aspect.isAsync="false" category="Changeover" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="GetTable">
                        <ResultType aspect.dataShape="BayerMaterialPerformanceDataShape" aspect.isDataTableEntry="true" baseType="INFOTABLE" description="" name="result" ordinal="0"/>
                        <ParameterDefinitions>
                            <FieldDefinition aspect.isRequired="true" aspect.thingTemplate="BayerProductionLine" baseType="THINGNAME" description="" name="productionLine" ordinal="1"/>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                    <ServiceDefinition aspect.isAsync="false" category="Changeover" description="" isAllowOverride="false" isLocalOnly="false" isOpen="false" isPrivate="false" name="LoadCSV">
                        <ResultType aspect.dataShape="BayerMaterialPerformanceDataShape" baseType="INFOTABLE" description="" name="result" ordinal="0"/>
                        <ParameterDefinitions>
                            <FieldDefinition aspect.isRequired="true" baseType="STRING" description="" name="filePath" ordinal="1"/>
                            <FieldDefinition aspect.isRequired="true" aspect.thingTemplate="BayerProductionLine" baseType="THINGNAME" description="" name="productionLine" ordinal="2"/>
                            <FieldDefinition baseType="BOOLEAN" description="" name="simulate" ordinal="3"/>
                        </ParameterDefinitions>
                    </ServiceDefinition>
                </ServiceDefinitions>
                <EventDefinitions/>
                <ServiceMappings/>
                <ServiceImplementations>
                    <ServiceImplementation description="" handlerName="Script" name="GetNominalRate">
                        <ConfigurationTables>
                            <ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var result = 0;
                                        
                                        var query = {
                                          "filters": {
                                            "type": "AND",
                                            "filters": [
                                              {
                                                "fieldName": "productionLine",
                                                "type": "EQ",
                                                "value": productionLine
                                              },
                                              {
                                                "fieldName": "code",
                                                "type": "EQ",
                                                "value": code
                                              }
                                            ]
                                          }
                                        };
                                        
                                        var params = {
                                        	maxItems: undefined /* NUMBER */,
                                        	values: undefined /* INFOTABLE*/,
                                        	query: query /* QUERY */,
                                        	source: undefined /* STRING */,
                                        	tags: undefined /* TAGS */
                                        };
                                        
                                        // result: INFOTABLE dataShape: "undefined"
                                        var entry = me.QueryDataTableEntries(params);
                                        
                                        if (entry.rows.length > 0) {
                                            result = entry.nominalRate;
                                        }
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation description="" handlerName="Script" name="GetTable">
                        <ConfigurationTables>
                            <ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        var query = {
                                          "filters": {
                                            "fieldName": "productionLine",
                                            "type": "EQ",
                                            "value": productionLine
                                          }
                                        };
                                        
                                        var params = {
                                        	maxItems: undefined /* NUMBER */,
                                        	values: undefined /* INFOTABLE*/,
                                        	query: query /* QUERY */,
                                        	source: undefined /* STRING */,
                                        	tags: undefined /* TAGS */
                                        };
                                        
                                        // result: INFOTABLE dataShape: "undefined"
                                        var result = me.QueryDataTableEntries(params);
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                    <ServiceImplementation description="" handlerName="Script" name="LoadCSV">
                        <ConfigurationTables>
                            <ConfigurationTable description="Script" isMultiRow="false" name="Script" ordinal="0">
                                <DataShape>
                                    <FieldDefinitions>
                                        <FieldDefinition baseType="STRING" description="code" name="code" ordinal="0"/>
                                    </FieldDefinitions>
                                </DataShape>
                                <Rows>
                                    <Row>
                                        <code>
                                        <![CDATA[
                                        //
                                        // LoadCSV service
                                        // * filePath - STRING
                                        // * productionLine - THINGNAME
                                        // * simulate - BOOLEAN
                                        if (!simulate) {
                                            simulate = false;
                                        }
                                        
                                        // result: INFOTABLE
                                        var data = Things["BayerUtilities"].LoadCSVGeneric({
                                            delimiter: ";" /* STRING */,
                                            filePath: filePath /* STRING */,
                                            repository: "BayerCSVRepository" /* THINGNAME */
                                        });
                                        var tableLength = data.rows.length;
                                        var dataShapeName = me.GetDataShape();
                                        var result = Resources["InfoTableFunctions"].CreateInfoTableFromDataShape({
                                            infoTableName: "result",
                                            dataShapeName: dataShapeName
                                        });
                                        for (var x = 0; x < tableLength; x++) {
                                            var row = data.rows[x];
                                            var values = me.CreateValues();
                                            values.productionLine = productionLine; //THINGNAME [Primary Key]
                                        
                                            // STRING [Primary Key]
                                            values.code = getAtLeastOneField(row, "Code", "Product Item",
                                                "Product item", "Product Code", "Product code");
                                            if (values.code === undefined)
                                                continue;
                                            // STRING
                                            values.description = getAtLeastOneField(row, "Product family",
                                                "Product Family", "Description", "description", "desc") || "";
                                            // NUMBER    
                                            values.nominalRate = getAtLeastOneField(row, "Nominal Rate", "Nominal rate",
                                                "Speed", "speed");
                                        
                                            // result: STRING
                                            if (!simulate) {
                                                me.AddOrUpdateDataTableEntry({
                                                    sourceType: undefined /* STRING */,
                                                    values: values /* INFOTABLE*/,
                                                    location: undefined /* LOCATION */,
                                                    source: undefined /* STRING */,
                                                    tags: undefined /* TAGS */
                                                });
                                            } //? simulate
                                            result.AddRow(values.rows[0]);
                                        } //# for each parsed row
                                        
                                        function getAtLeastOneField(row, args) {
                                            if (!row || !fields || fields.length == 0)
                                                return undefined;
                                            var value = undefined;
                                            for (var _idx = 0; _idx < fields.length; _idx++) {
                                                var _field = fields[_idx];
                                                value = row[_field];
                                                if (value != undefined && value != null) {
                                                    return value;
                                                }
                                            } //# for each input field
                                            value = undefined; // force it
                                            return value;
                                        } //> getAtLeastOneField(...)
                                        ]]>
                                        </code>
                                    </Row>
                                </Rows>
                            </ConfigurationTable>
                        </ConfigurationTables>
                    </ServiceImplementation>
                </ServiceImplementations>
                <Subscriptions/>
            </ThingShape>
            <PropertyBindings/>
            <RemotePropertyBindings/>
            <RemoteServiceBindings/>
            <RemoteEventBindings/>
            <AlertConfigurations/>
            <ImplementedShapes/>
            <ThingProperties/>
        </Thing>
    </Things>
</Entities>
